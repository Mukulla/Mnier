using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Forms;


namespace SMWF
{
    public partial class Form1 : Form
    {
        enum Diffi
        {
            EN_EASY,
            EN_MEDIUM,
            EN_HARD,
            EN_CUSTOM
        }

        enum EnButtonStates
        {
            Unrknown,
            Opened,
            Exploded,
            SpeluncaeLatebant,
            Numered,
            Determinated
        }

        Color[] ButtonColors;
        bool GameOver = false;
        bool GameStarted = false;
        int MaTime;

        Button[,] ArrayButtons;

        GameField Field001;
        Point StartPosition = new Point(10, 30);

        int BuSize = 30;

        private Form2 Form2Ref = null;
        public void GetControl(Form2 F2)
        {
            Form2Ref = F2;
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public Form1()
        {
            InitializeComponent();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void Form1_Load(object sender, EventArgs e)
        {
            MaTime = 0;
            //timer1.Enabled = true;
            label1.Size = new Size(54, 25);
            label1.AutoSize = false;
            label1.TextAlign = ContentAlignment.MiddleRight;
            label1.Text = MaTime.ToString();

            ButtonColors = new Color[6];
            ButtonColors[(int)EnButtonStates.Unrknown] = Color.FromArgb(255, 60, 120, 180);
            ButtonColors[(int)EnButtonStates.Opened] = Color.FromArgb(255, 180, 180, 180);
            ButtonColors[(int)EnButtonStates.Exploded] = Color.FromArgb(255, 240, 60, 30);
            ButtonColors[(int)EnButtonStates.SpeluncaeLatebant] = Color.FromArgb(255, 75, 25, 12);
            ButtonColors[(int)EnButtonStates.Numered] = Color.FromArgb(255, 180, 150, 30);
            ButtonColors[(int)EnButtonStates.Determinated] = Color.FromArgb(255, 90, 240, 45);

            Glo.SetDiffi();

            Field001 = new GameField();
            Field001.Init();

            this.ClientSize = new Size(BuSize * Glo.GSizes.Primis + 2 * StartPosition.X, BuSize * Glo.GSizes.Secundus + 2 * StartPosition.Y);
            label1.Location = new Point(this.Width - (int)(1.3 * label1.Width), 0);
            //this.BackColor = Color.FromArgb(255, 60, 45, 30);            

            MakeField();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void MakeField()
        {
            Point Placer = new Point(StartPosition.X, StartPosition.Y);

            ArrayButtons = new Button[Glo.GSizes.Secundus, Glo.GSizes.Primis];

            for (int i = 0; i < Glo.GSizes.Secundus; ++i)
            {
                for (int j = 0; j < Glo.GSizes.Primis; ++j)
                {
                    ArrayButtons[i, j] = new Button();
                    ArrayButtons[i, j].Location = new Point(Placer.X, Placer.Y);
                    ArrayButtons[i, j].Size = new Size(BuSize, BuSize);
                    ArrayButtons[i, j].Font = new Font(ArrayButtons[i, j].Font.FontFamily, 14);
                    ArrayButtons[i, j].Text = "";
                    ArrayButtons[i, j].TextAlign = ContentAlignment.MiddleLeft;
                    ArrayButtons[i, j].BackColor = ButtonColors[(int)EnButtonStates.Unrknown];
                    ArrayButtons[i, j].FlatStyle = FlatStyle.Flat;
                    ArrayButtons[i, j].FlatAppearance.BorderColor = Color.FromArgb(255, 30, 45, 66);
                    ArrayButtons[i, j].FlatAppearance.BorderSize = 1;
                    ArrayButtons[i, j].Click += Bu_Click;

                    Controls.Add(ArrayButtons[i, j]);

                    Placer.X += BuSize;
                }
                Placer.X = StartPosition.X;
                Placer.Y += BuSize;
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void Bu_Click(object Sender, EventArgs E)
        {
            if(!GameStarted)
            {
                GameStarted = true;
                timer1.Enabled = true;
            }
            if (GameOver)
            {
                GameStarted = false;
                timer1.Enabled = false;                
                return;
            }
            Button CurrentBu = (Button)Sender;
            //Вычисляем координаты кнопки
            Str_Geminus<int> Ind001;
            Ind001.Secundus = (CurrentBu.Location.Y - StartPosition.Y) / BuSize;
            Ind001.Primis = (CurrentBu.Location.X - StartPosition.X) / BuSize;

            OpenQuad(ref CurrentBu, ref Ind001);
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void OpenQuad(ref Button CurrentBu001, ref Str_Geminus<int> Indexes001)
        {
            if (Field001.Get(ref Indexes001) == (int)En_MineStates.Copyed)
            {
                return;
            }
            --Glo.LiberumElementis;
            //toolStripStatusLabel1.Text = Glo.LiberumElementis.ToString();
            if (Glo.LiberumElementis <= 0)
            {
                PaintMines(true);
                toolStripStatusLabel1.Text = "Победа";
                timer1.Enabled = false;
                GameOver = true;
            }
            
            //CurrentBu001.Enabled = false;
            if (Field001.Get(ref Indexes001) == (int)En_MineStates.Mine)
            {
                //CurrentBu001.Text = Field001.Get(ref Indexes001).ToString();
                PaintMines(false);
                CurrentBu001.BackColor = ButtonColors[(int)EnButtonStates.Exploded];
                toolStripStatusLabel1.Text = "Поражение";
                timer1.Enabled = false;
                GameOver = true;
            }
            else
            {
                if (Field001.Get(ref Indexes001) == (int)En_MineStates.Spacer)
                {
                    SearchAround(ref CurrentBu001, ref Indexes001);

                    return;
                }

                CurrentBu001.BackColor = ButtonColors[(int)EnButtonStates.Numered];
                CurrentBu001.Text = Field001.Get(ref Indexes001).ToString();
                PaintNumbers(ref CurrentBu001, Field001.Get(ref Indexes001));

                Field001.Set(ref Indexes001, (int)En_MineStates.Copyed);
                //CurrentBu001.Enabled = false;
                //--Glo.LiberumElementis;
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void SearchAround(ref Button CurrentBu002, ref Str_Geminus<int> Indexes002)
        {
            CurrentBu002.BackColor = ButtonColors[(int)EnButtonStates.Opened];
            //CurrentBu002.Enabled = false;
            Field001.Set(ref Indexes002, (int)En_MineStates.Copyed);

            Str_Geminus<int> Tempo = Func.Set(0, 0);

            //Проверяем блоки вокруг
            for (int i = 0; i < Field001.GetLooAr().Length; ++i)
            {
                //Tempo = Indexes002;
                Tempo.Secundus = Indexes002.Secundus + Field001.GetLooAr()[i].Secundus;
                Tempo.Primis = Indexes002.Primis + Field001.GetLooAr()[i].Primis;

                Func.CheckClausaAream(ref Tempo.Secundus, 0, Glo.GSizes.Secundus - 1);
                Func.CheckClausaAream(ref Tempo.Primis, 0, Glo.GSizes.Primis - 1);

                if (Field001.Get(ref Tempo) == (int)En_MineStates.Copyed)
                {
                    continue;
                }

                OpenQuad(ref ArrayButtons[Tempo.Secundus, Tempo.Primis], ref Tempo);
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void PaintMines(bool GameState)
        {
            foreach (var Item in Field001.MinesKoords)
            {
                ArrayButtons[Item.Secundus, Item.Primis].Enabled = false;
                if (GameState)
                {
                    ArrayButtons[Item.Secundus, Item.Primis].BackColor = ButtonColors[(int)EnButtonStates.Determinated];
                }
                else
                {
                    ArrayButtons[Item.Secundus, Item.Primis].BackColor = ButtonColors[(int)EnButtonStates.SpeluncaeLatebant];
                }
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void PaintNumbers(ref Button CurrentBu003, int Number001)
        {
            switch (Number001)
            {
                case 0:                    
                    break;
                case 1:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 15, 45, 120);
                    break;
                case 2:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 20, 90, 12);
                    break;
                case 3:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 150, 30, 15);
                    break;
                case 4:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 24, 30, 20);
                    break;
                case 5:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 180, 60, 0);
                    break;
                case 6:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 20, 30, 50);
                    break;
                case 7:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 60, 15, 3);
                    break;
                case 8:
                    CurrentBu003.ForeColor = Color.FromArgb(255, 66, 66, 66);
                    break;
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void exitusToolStripMenuItem_Click(object sender, EventArgs e)
        {
            this.Close();
        }
        private void facileToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Glo.CuDiffe = 0;
            NewGame();
        }
        private void mediocrisToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Glo.CuDiffe = 1;
            NewGame();
        }
        private void durumToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Glo.CuDiffe = 2;
            NewGame();
        }
        private void denuoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            NewGame();
        }
        private void sileoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Restart();
        }
        private void circaToolStripMenuItem_Click(object sender, EventArgs e)
        {
            const string Msg = "Игра сапёр с самозамкнутым полем";
            const string Cpt = "Об игре";
            var result = MessageBox.Show(Msg, Cpt, MessageBoxButtons.OK, MessageBoxIcon.Question);
        }
        private void новаяИграToolStripMenuItem_Click(object sender, EventArgs e)
        {
            NewGame();
        }
        private void зановоToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Restart();
        }
        private void eiusToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Glo.CuDiffe = 3;            
           // this.Enabled = false;
            timer1.Enabled = false;

            Form2 F2 = new Form2();
            Form2Ref = F2;

            Form2Ref.GetConto(this);

            Form2Ref.Show();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            //Esc
            if (e.KeyCode == Keys.Escape)
            {
                this.Close();
            }
            //F1
            if (e.KeyCode == Keys.F1)
            {
                NewGame();
            }
            //F2
            if (e.KeyCode == Keys.F2)
            {
                Restart();
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void NewGame()
        {
            DeleteButtons();

            ResetVal();

            Glo.SetDiffi();

            RecalculateFormSize();

            MakeField();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void NewCustomGame()
        {
            ResetVal();

            RecalculateFormSize();

            MakeField();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void Restart()
        {
            ResetVal();
            Glo.LiberumElementis = Glo.GSizes.Primis * Glo.GSizes.Secundus - Glo.CountMines;

            Clear();
            Field001.FillNumbers();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void ResetVal()
        {
            MaTime = 0;
            GameOver = false;
            GameStarted = false;
            label1.Text = MaTime.ToString();
        }
        void RecalculateFormSize()
        {
            this.ClientSize = new Size(BuSize * Glo.GSizes.Primis + 2 * StartPosition.X, BuSize * Glo.GSizes.Secundus + 2 * StartPosition.Y);
            this.Show();

            Field001.Init();
            label1.Location = new Point(this.Width - (int)(1.3 * label1.Width), 0);
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public void DeleteButtons()
        {
            Str_Geminus<int> Indexes;
            for (Indexes.Secundus = 0; Indexes.Secundus < Glo.GSizes.Secundus; ++Indexes.Secundus)
            {
                for (Indexes.Primis = 0; Indexes.Primis < Glo.GSizes.Primis; ++Indexes.Primis)
                {
                    ArrayButtons[Indexes.Secundus, Indexes.Primis].Click -= new System.EventHandler(this.Bu_Click);
                    this.Controls.Remove(ArrayButtons[Indexes.Secundus, Indexes.Primis]);
                    ArrayButtons[Indexes.Secundus, Indexes.Primis].Dispose();
                }
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        private void timer1_Tick(object sender, EventArgs e)
        {
            ++MaTime;
            if (MaTime == 1600)
            {
                GameOver = true;
                GameStarted = false;
                timer1.Enabled = false;
                toolStripStatusLabel1.Text = "Поражение";
            }
            label1.Text = MaTime.ToString();
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        void Clear()
        {
            Str_Geminus<int> Indexes;
            for (Indexes.Secundus = 0; Indexes.Secundus < Glo.GSizes.Secundus; ++Indexes.Secundus)
            {
                for (Indexes.Primis = 0; Indexes.Primis < Glo.GSizes.Primis; ++Indexes.Primis)
                {
                    ArrayButtons[Indexes.Secundus, Indexes.Primis].Enabled = true;
                    ArrayButtons[Indexes.Secundus, Indexes.Primis].Text = "";
                    ArrayButtons[Indexes.Secundus, Indexes.Primis].BackColor = ButtonColors[(int)EnButtonStates.Unrknown];
                }
            }
        }

        
    }
}
